#基础的插件包配置，会优先加载
basePlugins:
  pre-agent-common:
    jarName: pre-agent-common
  pre-zipkin-sdk:
    jarName: pre-zipkin-sdk
#第三方插件包配置
plugins:
  pre-zipkin-plugin:
    jarName: pre-zipkin-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.ZipkinInterceptor
    loadPatterns:
      - com.preapm.agent.constant.BaseConstants
      
  pre-httpclient4-plugin:
    jarName: pre-httpclient4-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.Httpclient4Interceptor
    loadPatterns:
      - org.apache.http.impl.client.CloseableHttpClient
      
  pre-tomcat-plugin:
    jarName: pre-tomcat-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.TomcatInterceptor
    loadPatterns:
      - org.apache.catalina.core.StandardWrapperValve

  pre-logback-plugin:
    jarName: pre-logback-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.LogbackInterceptor
    loadPatterns:
      - ch.qos.logback.core.joran.action.AppenderAction
      
  pre-okhttp-plugin:
    jarName: pre-okhttp-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.OkHttpInterceptor
    loadPatterns:
      - okhttp3.OkHttpClient$Builder
    
  pre-druid-plugin:
    jarName: pre-druid-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.DruidInterceptor
    loadPatterns:
      - com.alibaba.druid.pool.DruidDataSource
   
  pre-mysql-jdbc-driver-plugin:
    jarName: pre-mysql-jdbc-driver-plugin
    interceptorNames:
      - com.preapm.agent.plugin.interceptor.MySQLInterceptor
    loadPatterns:
      - com.mysql.jdbc.Connection 

---
#AOP切面配置，类似sparing aop配置
patterns:
  tomcat:
    #插件织入匹配方法路径，支持正则表达式（这里一般配置包名称或者类名称）
    patterns:
      - org.apache.catalina.core.StandardWrapperValve
    #排除匹配
    excludedPatterns:
    #包含匹配
    includedPatterns:
       - key: org.apache.catalina.core.StandardWrapperValve.invoke\(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response\)
    interceptors:
      - com.preapm.agent.plugin.interceptor.TomcatInterceptor
      
  httpClient4:
    patterns:
      - org.apache.http.impl.client.InternalHttpClient
      - org.apache.http.impl.client.MinimalHttpClient
      - org.apache.http.impl.client.AbstractHttpClient
    excludedPatterns:
    includedPatterns:
       - key: org.apache.http.impl.client.InternalHttpClient.doExecute\(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext\)
    interceptors:
      - com.preapm.agent.plugin.interceptor.Httpclient4Interceptor

  logback:
    patterns:
      - ch.qos.logback.core.joran.action.AppenderAction
    excludedPatterns:
    includedPatterns:
      - key: ch.qos.logback.core.joran.action.AppenderAction.begin\(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes\)
    interceptors:
      - com.preapm.agent.plugin.interceptor.LogbackInterceptor

  okhttp:
    patterns:
      - okhttp3.OkHttpClient\$Builder
    excludedPatterns:
    includedPatterns:
      - key: okhttp3.OkHttpClient\$Builder\(\)
    interceptors:
      - com.preapm.agent.plugin.interceptor.OkHttpInterceptor
      
  durid:
      patterns:
        - com.alibaba.druid.pool.DruidDataSource
      #排除匹配路径
      excludedPatterns:
      includedPatterns:
        - key:
           com.alibaba.druid.pool.DruidDataSource.getConnection\(long\)
          interceptors:
           - com.preapm.agent.plugin.interceptor.ZipkinInterceptor 
       # - key:
       #    com.alibaba.druid.pool.DruidDataSource\(\)
       #   interceptors:
       #     - com.preapm.agent.plugin.interceptor.DruidInterceptor
     
  mysql-jdbc-driver:
    patterns:
      - com.mysql.jdbc.ConnectionImpl
    excludedPatterns:
    includedPatterns:
      - key: com.mysql.jdbc.ConnectionImpl.initializeSafeStatementInterceptors\(\)
    interceptors:
      - com.preapm.agent.plugin.interceptor.MySQLInterceptor     
      
  jedis:
    patterns:
      - redis.clients.jedis.BinaryJedis
    excludedPatterns:
       - key: ping.*
       - key: close.*
       - key: disconnect.*
       - key: resetState.*
       - key: getClient.*
       - key: setClient.*
       - key: getDB.*
       - key: isInMulti.*
       - key: isInWatch.*
       - key: clear.*
       - key: pipelined.*
       - key: setDb.*
       - key: setDataSource.*
       - key: getClusterNodes.*
       - key: getConnectionFromSlot.*
    includedPatterns:
      - key: .*
    interceptors:
      - com.preapm.agent.plugin.interceptor.ZipkinInterceptor    
      
  #==========================================================一下是具体业务配置根据具体项目路径修改================================     
        
  #业务controller配置
  pre-controller:
    patterns:
      - com.*Controller
      - org.exampledriven.*Controller
    excludedPatterns:
    includedPatterns:
      - key: .*
    interceptors:
      - com.preapm.agent.plugin.interceptor.ZipkinInterceptor
    track:
           inParam: true
           outParam: true
           time: -1    
  #业务service配置    
  pre-service:
    patterns:
      - com.*.service.impl.*
    excludedPatterns:
    includedPatterns:
      - key: .*
    interceptors:
      - com.preapm.agent.plugin.interceptor.ZipkinInterceptor
    track:
           inParam: true #记录入参
           outParam: true #记录出参
           time: -1    #不设置时间限制   
  #agent测试配置    
  test:
      #插件织入匹配方法路径，支持正则表达式
      patterns:
        - com.preapm.agent.Bootstrap
      #排除匹配路径
      excludedPatterns:  
       - key: com.preapm.agent.Bootstrap\(\)
      includedPatterns:
      - key:  .*
      interceptors:
        - com.preapm.agent.plugin.interceptor.ZipkinInterceptor
      track:
           inParam: false
           outParam: true
           time: -1 